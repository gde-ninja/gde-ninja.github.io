<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ux | gde.ninja]]></title>
  <link href="http://gde-ninja.github.io/blog/categories/ux/atom.xml" rel="self"/>
  <link href="http://gde-ninja.github.io/"/>
  <updated>2014-08-26T23:11:53-04:00</updated>
  <id>http://gde-ninja.github.io/</id>
  <author>
    <name><![CDATA[Etienne Caron]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Attack Plan]]></title>
    <link href="http://gde-ninja.github.io/blog/2014/08/26/attack-plan/"/>
    <updated>2014-08-26T22:05:05-04:00</updated>
    <id>http://gde-ninja.github.io/blog/2014/08/26/attack-plan</id>
    <content type="html"><![CDATA[<!-- 150 wpm (+30w) -->


<p><img class="right" src="/images/posts/the_battle.png" width="256" title="The Battle" ></p>

<p>My current goal is to show how Renderscript could be used to create innovative and dynamic UI components. Let&rsquo;s aim to <a href="https://developers.google.com/events/io/sessions/326368573">Echant and Amaze and</a> and&hellip; hmm, what am I forgetting here? :)</p>

<p>One thing to realize is that Renderscript is a tool that can solve quite <em><a href="http://streamcomputing.eu/blog/2013-06-03/the-application-areas-opencl-can-be-used/">interesting</a></em> problems. Drawing primitives and rendering text are mostly solved problems, on Android.</p>

<p>As outlined in <a href="http://developer.android.com/training/custom-views/custom-drawing.html">Custom Drawing</a>, you can programatically render lines, shapes, text and so on. Also note that <a href="http://developer.android.com/guide/topics/resources/drawable-resource.html">Drawable and Animation Resources</a> can be defined as xml resources.</p>

<p>This leaves us with a solution (a high performance number crunching tool) looking for a problem. Since we can crunch large data sets, <a href="http://shop.oreilly.com/product/0636920000617.do">beautiful visualisation</a> of data is one interesting area of exploration.</p>

<p>Another avenue is <a href="http://en.wikipedia.org/wiki/Procedural_generation">live graphical content generation</a>. We can render complex geometric shapes to add <a href="http://www.merriam-webster.com/dictionary/pizzazz">pizzazz</a> and flair to our apps. Think <a href="http://en.wikipedia.org/wiki/Fractal">fractals</a>, special effects, sounds even, animations&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="http://gde-ninja.github.io/blog/2014/08/26/first-post/"/>
    <updated>2014-08-26T08:46:36-04:00</updated>
    <id>http://gde-ninja.github.io/blog/2014/08/26/first-post</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/posts/Android_Robot_100.png" title="Andy" > This Friday I&rsquo;ve received the excellent news that I&rsquo;ve been accepted as an <a href="https://developers.google.com/experts/">Android GDE</a>! I will be blogging my GDE activities here, at gde.ninja.</p>

<p>Next up, I&rsquo;ll start exploring how to leverage Renderscript to create really dynamic custom Views.</p>
]]></content>
  </entry>
  
</feed>
